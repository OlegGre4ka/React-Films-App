{"version":3,"sources":["App/Header/SearchComponent.js","App/Header/GenresDropdown.js","App/Header/NavbarMenu.js","App/Main/MessageNotFound.js","App/Main/Films.js","App/Main/FilmDetailed.js","App/Main/Actors.js","App/Main/ActorDetailed.js","App/Main/PagePagination.js","App/App.js","serviceWorker.js","Redux/paginationReducer.js","Redux/filmDetailedReducer.js","Redux/actorDetailedReducer.js","Redux/searchFilmReducer.js","Redux/searchActorReducer.js","Redux/genresReducer.js","Redux/selectIDGenreReducer.js","Redux/rootReducer.js","index.js"],"names":["API_KEY","SearchComponent","onSearchInputChange","event","_this","props","location","pathname","updateSearchedFilmData","target","value","searchedFilmData","updateSearchedActors","searchedActors","key","gettingSeachedFilms","gettingListActors","searchFilmWord","fetch","concat","response","json","data","this","results","searchActorWord","react_default","a","createElement","className","InputGroupAddon","addonType","size","Fragment","Input","type","placeholder","searchWord","onChange","onKeyPress","InputGroupText","fa","Component","withRouter","connect","state","searchFilmReducer","searchActorReducer","dispatch","payloadWord","payloadFilms","payloadActors","GenresDropdown","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","dropdownOpen","gettingGenres","updateGenreID","genres","updateGenres","_this2","ButtonDropdown","isOpen","DropdownToggle","caret","genreName","DropdownMenu","map","genre","i","DropdownItem","onClick","id","name","React","genresReducer","genreID","selectIDGenreReducer","payload","payloadName","NavbarMenu","bind","assertThisInitialized","Navbar","color","light","expand","NavbarBrand","style","to","Header_SearchComponent","Header_GenresDropdown","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","tag","RRNavLink","activeStyle","MessageNotFound","textAlign","fontSize","fontWeight","marginTop","Films","moveOnFilmDetailed","Film","films","filter","item","updateFilmDetailed","history","push","message","spinner","settingPagination","updateCurrentPage","gettingListFilms","prevProps","prevState","page","length","setTimeout","newGenresSelected","film","genre_ids","some","_this3","Spinner","width","height","Main_MessageNotFound","padding","Card","minHeight","CardImg","top","cursor","src","poster_path","alt","title","CardBody","CardTitle","CardSubtitle","release_date","slice","popularity","marginRight","paginationReducer","filmDetailedReducer","Pagination","aria-label","marginLeft","PaginationItem","PaginationLink","previous","CardText","overview","Actors","moveOnActorDetailed","Actor","actors","updateActorDetailed","actor","profile_path","actorDetailedReducer","window","scrollTo","next","App","setPagination","replace","Header_NavbarMenu","react_router","path","component","FilmDetailed","exact","render","Main_Films","ActorDetailed","Main_Actors","Main_PagePagination","href","rel","Boolean","hostname","match","initialState","combineReducers","arguments","undefined","action","store","createStore","rootReducer","ReactDOM","es","react_router_dom","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d4005ba.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  InputGroupAddon,\n  InputGroupText,\n  Input\n} from 'reactstrap';\nimport { FaSistrix } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nconst API_KEY = '5874acfd11651a28c55771624f7021f4';\n\nclass SearchComponent extends Component {\n    onSearchInputChange = event => {\n        if(this.props.location.pathname==='/films'){\n\n        this.props.updateSearchedFilmData(event.target.value,this.props.searchedFilmData);\n        } \n        else{\n            this.props.updateSearchedActors(event.target.value, this.props.searchedActors)\n        }\n        if (event.key === \"Enter\") {\n\n        if(this.props.location.pathname==='/films'){\n            this.gettingSeachedFilms(event.target.value);\n            // this.input.blur();\n\n        } else {\n            this.gettingListActors(event.target.value)\n        }\n\n          }\n      };\n\n    async gettingSeachedFilms(searchFilmWord) {\n        const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchFilmWord}&page=1&include_adult=false`       \n        );\n        const data = await response.json();\n        this.props.updateSearchedFilmData('',data.results)\n      }\n\n      async gettingListActors(searchActorWord) {\n        const response = await fetch(\n            `https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&language=en-US&query=${searchActorWord}&page=1&include_adult=false`\n        );\n        const data = await response.json();\n        this.props.updateSearchedActors('', data.results)\n      }\n\n  render() {\n    //   console.log(this.props,'search-props')\n    return (\n        <div className=\"Search\">\n  \n              <InputGroupAddon addonType=\"append\" size=\"normal\">\n          {this.props.location.pathname==='/films'&&(<><Input\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  value={this.props.searchWord}\n                  onChange={this.onSearchInputChange}\n                  onKeyPress={this.onSearchInputChange}\n                />\n                <InputGroupText\n                // style={{cursor:'pointer'}}\n                //   onClick={this.onSearchInputChange}\n                >\n                  <FaSistrix />\n          </InputGroupText></>)}\n              { this.props.location.pathname==='/actors' &&(<> <Input\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  value={this.props.searchActorWord}\n                  onChange={this.onSearchInputChange}\n                  onKeyPress={this.onSearchInputChange}\n                />\n                <InputGroupText\n                // style={{cursor:'pointer'}}\n                //   onClick={this.onSearchInputChange}\n                >\n                  <FaSistrix />\n              </InputGroupText></>)}\n             \n              </InputGroupAddon>\n         \n      </div>\n    );\n  }\n}\n\n\n    const mapStateToProps = state => {\n        return {\n            searchWord: state.searchFilmReducer.searchWord,\n            searchedFilmData: state.searchFilmReducer.searchedFilmData,\n            searchActorWord: state.searchActorReducer.searchActorWord,\n            searchedActors: state.searchActorReducer.searchedActors\n\n        };\n    };\n\n    const mapDispatchToProps = dispatch => {\n        return {\n        updateSearchedFilmData: (searchWord,searchedFilmData) => {\n            dispatch({ type: \"UPDATE_SEARCHED_FILM_DATA\", payloadWord: searchWord, payloadFilms: searchedFilmData });\n        },\n        updateSearchedActors: (searchActorWord,searchedActors) => {\n            dispatch({ type: \"UPDATE_SEARCHED_ACTORS\", payloadWord:searchActorWord, payloadActors: searchedActors });\n        }\n    };\n    }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SearchComponent));","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nconst API_KEY = '5874acfd11651a28c55771624f7021f4';\n\nclass GenresDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false,\n            //   genres:[]\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    componentDidMount() {\n        this.gettingGenres();\n        this.props.updateGenreID(null, 'Genres');\n\n    }\n\n    async gettingGenres() {\n        const response = await fetch(\n            `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n        );\n        const genres = await response.json();\n        this.props.updateGenres(genres.genres)\n    }\n\n    render() {\n\n        return (\n           <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        {/* //         {this.props.genreID === null && <DropdownToggle caret>\n        //             Genres\n        // </DropdownToggle>} */}\n                {/* // {this.props.genreID !== null &&  */}\n                    <DropdownToggle caret>\n                    {this.props.genreName}\n                </DropdownToggle>\n                <DropdownMenu>\n                    {this.props.genres.map((genre, i) => (<DropdownItem key={i}\n                        onClick={() => this.props.updateGenreID(genre.id, genre.name)}\n                    >{genre.name}</DropdownItem>))}\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        genres: state.genresReducer.genres,\n        genreID: state.selectIDGenreReducer.genreID,\n        genreName: state.selectIDGenreReducer.genreName\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateGenres: genres => {\n            dispatch({ type: \"GETTING_GENRES\", payload: genres });\n        },\n        updateGenreID: (genreID, genreName) => {\n            dispatch({ type: \"UPDATE_ID_GENRE\", payload: genreID, payloadName: genreName });\n        }\n\n    };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GenresDropdown));","import React, { Component } from 'react';\nimport '../App.scss';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\nimport {\n  NavLink as RRNavLink,\n} from \"react-router-dom\";\nimport SearchComponent from './SearchComponent';\nimport GenresDropdown from './GenresDropdown';\nimport { withRouter } from \"react-router-dom\";\n\n\nclass NavbarMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div className=\"NavbarMenu\">\n        <Navbar color=\"\" light expand=\"md\">\n          <NavbarBrand\n            style={{ color: \"lightgreen\" }}\n            to=\"/\">React Films</NavbarBrand>\n          <NavbarBrand>\n            <SearchComponent />\n          </NavbarBrand>\n      {this.props.location.pathname==='/films'&&<NavbarBrand>\n            <GenresDropdown />\n          </NavbarBrand>}\n\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  style={{ color: \"green\" }}\n                  activeStyle={{ color: \"white\" }}\n                  to=\"/films\">Films</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  tag={RRNavLink}\n                  style={{ color: \"green\" }}\n                  activeStyle={{ color: \"white\" }}\n                  to=\"/actors\">Actors</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\n\nexport default withRouter(NavbarMenu)","import React from 'react';\n\nconst MessageNotFound = (props) =>{\n        return(\n            <p style={{color:'red',textAlign:'center', fontSize:'32px', fontWeight:'bold', marginTop:'50px'}}>\n            Results by your search - not found</p>\n        )\n}\nexport default MessageNotFound;","import React, { Component } from 'react';\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from 'reactstrap';\nimport { Spinner } from 'reactstrap';\nimport { FaStar } from 'react-icons/fa';\nimport MessageNotFound from './MessageNotFound';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\n\nconst API_KEY = '5874acfd11651a28c55771624f7021f4';\nclass Films extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      films: [],\n      genres: [],\n      message: false,\n      spinner: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.settingPagination(false);\n\n    this.props.updateCurrentPage(1);\n    this.gettingListFilms();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.page !== this.props.page) {\n      this.gettingListFilms();\n    }\n\n    if (prevProps.searchedFilmData !== this.props.searchedFilmData) {\n      this.setState({\n        films: this.props.searchedFilmData\n      });\n      if (this.props.searchedFilmData.length === 0) {\n        this.props.settingPagination(false);\n        this.setState({ message: true });\n        setTimeout(\n          () => {\n            this.setState({ message: false, films:this.props.films });\n\n            // this.setState({ message: false, spinner: true });\n            // this.gettingListFilms();\n          }, 1500\n        )\n      }\n    }\n\n    if ( prevProps.genreID !== this.props.genreID||(prevProps.page !== this.props.page&&prevProps.genreID !== this.props.genreID)) {\n      const newGenresSelected = this.props.films.filter(\n        film => film.genre_ids.some(id => id === this.props.genreID)\n      )\n      this.setState({ films: newGenresSelected })\n      this.props.updateFilmDetailed(this.props.film, this.props.films);\n\n      if (newGenresSelected.length === 0) {\n        this.props.settingPagination(false);\n        this.setState({ message: true });\n        setTimeout(\n          () => {\n            this.setState({ message: false, films:this.props.films });\n            // this.gettingListFilms();\n        this.props.updateGenreID(this.props.genreID, 'Genres')\n\n          }, 1500\n        )\n      }\n    }\n\n  }\n\n  async gettingListFilms() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=${this.props.page}`\n    );\n    const data = await response.json();\n    this.setState({\n      films: data.results,\n      spinner: false\n    });\n    this.props.updateFilmDetailed(this.props.film, data.results);\n\n    this.props.settingPagination(true);\n  }\n\n  moveOnFilmDetailed = (id) => {\n    const Film = this.state.films.filter(item => item.id === id);\n    this.props.updateFilmDetailed(Film,this.props.films);\n    this.props.history.push(`/films/` + id);\n  }\n  render() {\n    // console.log(this.props,'props-films')\n    return (\n      <div className=\"Films container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4 d-flex justify-content-center\">\n            {this.state.spinner && <Spinner color=\"success\" style={{ width: '5rem', height: '5rem', marginTop: '8rem' }} />}\n            {this.state.message && <MessageNotFound />}\n          </div>\n          <div className=\"col-md-4\"></div>\n\n        </div>\n\n        <div className=\"row\">\n\n          {this.state.films.map((film, i) => (\n            <div key={i} className=\"col-md-3\" style={{ padding: '5px' }}>\n\n              <Card key={i} style={{ minHeight: '100%' }} >\n                <CardImg top width=\"100%\" style={{ cursor: 'pointer' }}\n                  onClick={() => this.moveOnFilmDetailed(film.id)}\n                  src={`https://image.tmdb.org/t/p/w500${film.poster_path}`} alt={film.title} />\n                <CardBody>\n                  <CardTitle\n                    onClick={() => this.moveOnFilmDetailed(film.id)}\n                    style={{ color: 'darkblue', fontSize: '20px', fontWeight: 'bold', cursor: 'pointer' }}>{film.title}</CardTitle>\n\n                  <CardSubtitle className=\"d-flex justify-content-between\">\n                    <span>{film.release_date.slice(0, 4)}</span>\n                    <span><FaStar style={{ color: 'gold' }} />{film.popularity}</span></CardSubtitle>\n                  {this.props.genres.map((genre, i) => (film.genre_ids.some(id => genre.id === id) && <span key={i} style={{ fontSize: '14px', marginRight: '3px' }}>{(genre.name + ' ')}</span>))}\n                </CardBody>\n              </Card>\n            </div>))\n          }\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.paginationReducer.page,\n    film: state.filmDetailedReducer.film,\n    films: state.filmDetailedReducer.films,\n\n    searchedFilmData: state.searchFilmReducer.searchedFilmData,\n    genres: state.genresReducer.genres,\n    genreID: state.selectIDGenreReducer.genreID\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCurrentPage: page => {\n      dispatch({ type: \"UPDATE_PAGE\", payload: page });\n    },\n    updateFilmDetailed: (film,films) => {\n      dispatch({ type: \"UPDATE_FILM_DETAILED\", payload: film , payloadFilms:films});\n    },\n    updateGenreID: (genreID, genreName) => {\n      dispatch({ type: \"UPDATE_ID_GENRE\", payload: genreID, payloadName: genreName });\n  }\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Films));","import React from 'react';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from 'reactstrap';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { connect } from \"react-redux\";\n\nconst  FilmDetailed = props=> {\n    // console.log(this.props,'props-film-1')\n    return (\n      <div className=\"Films container-fluid\">\n        <div className=\"row\">\n          <Pagination aria-label=\"Page navigation example\" style={{ marginLeft: '25px', marginTop: '10px' }}>\n            <PaginationItem >\n              <PaginationLink previous onClick={() => props.history.push('/films')}>\n                Back\n             </PaginationLink>\n            </PaginationItem>\n          </Pagination>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-2\"></div>\n          {props.film.map((item, i) => (\n            <div key={i} className=\"col-md-8\" style={{ marginTop: '10px' }}>\n              <Card key={i} >\n                <div className=\"row\">\n\n                  <div className=\"col-md-8\">\n                    <CardImg width=\"100%\" src={`https://image.tmdb.org/t/p/w400${item.poster_path}`} alt={item.title} />\n                  </div>\n                  <div className=\"col-md-4\">\n                    <CardBody>\n                      <CardTitle\n                        style={{ color: 'darkblue', fontSize: '20px', fontWeight: 'bold', cursor: 'pointer' }}\n                      >{item.title}</CardTitle>\n\n                      <CardSubtitle className=\"d-flex justify-content-between\">\n                      </CardSubtitle>\n\n                      <CardText>{item.overview}</CardText>\n                    </CardBody>\n                  </div>\n                </div>\n              </Card>\n\n            </div>))\n          }\n          <div className=\"col-md-2\"></div>\n\n        </div>\n\n\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    film: state.filmDetailedReducer.film\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n    updateFilmDetailed: film => {\n      dispatch({ type: \"UPDATE_FILM_DETAILED\", payload: film });\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmDetailed);","import React, { Component } from 'react';\n// import './App.scss';\nimport {\n  Card,\n  CardImg,\n  // CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from 'reactstrap';\nimport { Spinner } from 'reactstrap';\nimport { FaStar } from 'react-icons/fa';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport MessageNotFound from './MessageNotFound';\n\nconst API_KEY = '5874acfd11651a28c55771624f7021f4';\nclass Actors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actors: [],\n      genres: [],\n      message: false,\n      spinner: true\n    };\n\n  }\n\n  componentDidMount() {\n    this.props.settingPagination(false);\n    this.props.updateCurrentPage(1);\n    this.gettingListActors();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevProps.page !== this.props.page) {\n      this.gettingListActors()\n    } else\n      if (prevProps.searchedActors !== this.props.searchedActors) {\n        this.setState({\n          actors: this.props.searchedActors\n        });\n        if (this.props.searchedActors.length === 0) {\n          this.props.settingPagination(false);\n\n          this.setState({ message: true });\n          setTimeout(\n            () => {\n              this.setState({ message: false,spinner:true });\n              this.gettingListActors();\n            },1500\n          )\n        }\n      }\n  }\n\n  async gettingListActors() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/person/popular?api_key=${API_KEY}&language=en-US&page=${this.props.page}`\n    );\n    const data = await response.json();\n    this.setState({\n      actors: data.results,\n      spinner: false,\n    \n    });\n    this.props.settingPagination(true);\n\n  }\n\n  moveOnActorDetailed = (id) => {\n    const Actor = this.state.actors.filter(item => item.id === id);\n    this.props.updateActorDetailed(Actor)\n    this.props.history.push(`/actors/` + id);\n  }\n  render() {\n    // console.log(this.props,'props-films')\n    return (\n      <div className=\"Films container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4 d-flex justify-content-center \">\n            {this.state.spinner && <Spinner color=\"success\" style={{ width: '5rem', height: '5rem',marginTop:'8rem' }} />}\n            {this.state.message && <MessageNotFound/>}\n          </div>\n          <div className=\"col-md-4\"></div>\n\n        </div>\n        <div className=\"row\">\n          {this.state.actors.map((actor, i) => (\n            <div key={i} className=\"col-md-3\" style={{ padding: '5px' }}>\n              <Card key={i} style={{ minHeight: '100%' }} >\n                <CardImg top width=\"100%\"\n                  onClick={() => this.moveOnActorDetailed(actor.id)}\n                  style={{ cursor: 'pointer' }}\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} />\n                <CardBody>\n                  <CardTitle\n                    onClick={() => this.moveOnActorDetailed(actor.id)}\n                    style={{ color: 'darkblue', fontSize: '20px', fontWeight: 'bold', cursor: 'pointer' }}>{actor.name}</CardTitle>\n                  <CardSubtitle className=\"d-flex justify-content-between\">\n                    <span><FaStar style={{ color: 'gold' }} />{actor.popularity}</span>\n                  </CardSubtitle>\n                </CardBody>\n              </Card>\n            </div>))\n          }\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.paginationReducer.page,\n    actor: state.actorDetailedReducer.actor,\n    searchedActors: state.searchActorReducer.searchedActors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCurrentPage: page => {\n      dispatch({ type: \"UPDATE_PAGE\", payload: page });\n    },\n    updateActorDetailed: actor => {\n      dispatch({ type: \"UPDATE_ACTOR_DETAILED\", payload: actor });\n    }\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Actors));","import React from 'react';\nimport {\n  Card,\n  CardImg,\n  //   CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from 'reactstrap';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ActorDetailed = props => {\n    // console.log(this.props,'props-film-1')\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Pagination aria-label=\"Page navigation example\" style={{ marginLeft: '25px', marginTop: '10px' }}>\n            <PaginationItem >\n              <PaginationLink previous onClick={()=>props.history.push('/actors')}>\n                Back\n             </PaginationLink>\n            </PaginationItem>\n          </Pagination>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-2\"></div>\n          {props.actor.map((item, i) => (\n            <div key={i} className=\"col-md-8\" style={{ marginTop: '10px' }}>\n              <Card key={i} >\n                <div className=\"row\">\n                  <div className=\"col-md-8\">\n                    <CardImg top src={`https://image.tmdb.org/t/p/w500${item.profile_path}`} alt={item.name} />\n                  </div>\n                  <div className=\"col-md-4\">\n                    <CardBody >\n                      <CardTitle\n                        style={{ color: 'darkblue', fontSize: '20px', fontWeight: 'bold', cursor: 'pointer' }}\n                      >{item.name}</CardTitle>\n\n                      <CardSubtitle className=\"d-flex justify-content-between\">\n                      </CardSubtitle>\n\n                      {/* <CardText>{item.overview}</CardText> */}\n                    </CardBody>\n                  </div>\n                </div>\n              </Card>\n            </div>))\n          }\n          <div className=\"col-md-2\"></div>\n\n        </div>\n\n\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.paginationReducer.page,\n    actor: state.actorDetailedReducer.actor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCurrentPage: page => {\n      dispatch({ type: \"UPDATE_PAGE\", payload: page });\n    },\n    updateActorDetailed: actor => {\n      dispatch({ type: \"UPDATE_ACTOR_DETAILED\", payload: actor });\n    }\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActorDetailed))","import React from 'react';\nimport '../App.scss';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { connect } from \"react-redux\";\n\nconst PagePagination = props => {\n\n    const selectPrevPage = () => {\n        if (props.page >= 2) {\n            props.updateCurrentPage(props.page - 1);\n            setTimeout(\n                () => window.scrollTo(0, 0), 400\n            )\n        } else {\n            props.updateCurrentPage(1);\n            setTimeout(\n                () => window.scrollTo(0, 0), 400\n            )\n        }\n    }\n    const selectNextPage = () => {\n\n        if (props.page <= 5) {\n            props.updateCurrentPage(6);\n            setTimeout(\n                () => window.scrollTo(0, 0), 400\n            )\n        } else {\n            props.updateCurrentPage(props.page + 1);\n            setTimeout(\n                () => window.scrollTo(0, 0), 400\n            )\n        }\n    }\n    return (\n        <div className=\"PagePagination\">\n            <Pagination aria-label=\"Page navigation example\">\n                {/* <PaginationItem>\n                <PaginationLink first  />\n            </PaginationItem> */}\n                {/* <PaginationItem>\n                <PaginationLink previous onClick={selectPrevPage}/>\n            </PaginationItem> */}\n                <PaginationItem>\n                    <PaginationLink onClick={() => {\n                        props.updateCurrentPage(1); setTimeout(\n                            () => window.scrollTo(0, 0), 400\n                        )\n                    }}>\n                        1\n          </PaginationLink>\n                </PaginationItem>\n                <PaginationItem>\n                    <PaginationLink onClick={() => {\n                        props.updateCurrentPage(2); setTimeout(\n                            () => window.scrollTo(0, 0), 400\n                        )\n                    }}>\n                        2\n          </PaginationLink>\n                </PaginationItem>\n                <PaginationItem>\n                    <PaginationLink onClick={() => {\n                        props.updateCurrentPage(3); setTimeout(\n                            () => window.scrollTo(0, 0), 400\n                        )\n                    }}>\n                        3\n          </PaginationLink>\n                </PaginationItem>\n                <PaginationItem>\n                    <PaginationLink onClick={() => {\n                        props.updateCurrentPage(4); setTimeout(\n                            () => window.scrollTo(0, 0), 400\n                        )\n                    }}>\n                        4\n          </PaginationLink>\n                </PaginationItem>\n                <PaginationItem>\n                    <PaginationLink onClick={() => {\n                        props.updateCurrentPage(5); setTimeout(\n                            () => window.scrollTo(0, 0), 400\n                        )\n                    }}>\n                        5\n          </PaginationLink>\n                </PaginationItem>\n                <PaginationItem>\n                    <PaginationLink previous onClick={selectPrevPage} />\n                </PaginationItem>\n                <PaginationItem>\n                    <PaginationLink next onClick={selectNextPage} />\n                </PaginationItem>\n                {props.page > 5 && <PaginationItem>\n                    <PaginationLink>\n                        {props.page}\n                    </PaginationLink>\n                </PaginationItem>}\n\n                {/* <PaginationItem>\n                <PaginationLink last />\n            </PaginationItem> */}\n            </Pagination>\n        </div>);\n}\n\nconst mapStateToProps = state => {\n    return {\n        page: state.paginationReducer.page\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateCurrentPage: page => {\n            dispatch({ type: \"UPDATE_PAGE\", payload: page });\n        }\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PagePagination);","import React, { Component } from 'react';\nimport './App.scss';\nimport NavbarMenu from './Header/NavbarMenu';\nimport Films from './Main/Films';\nimport FilmDetailed from './Main/FilmDetailed';\nimport Actors from './Main/Actors';\nimport ActorDetailed from './Main/ActorDetailed';\n\nimport PagePagination from \"./Main/PagePagination\";\nimport {\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { FaEnvelope } from \"react-icons/fa\";\nimport { FaSkype } from \"react-icons/fa\";\n\nimport { withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      setPagination: false\n    }\n  }\n  componentDidMount() {\n    // console.log(this.props, \"App-props\"); \n    this.props.history.replace('/films');\n  }\n\n  settingPagination = value => {\n    this.setState({ setPagination: value })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavbarMenu />\n        </header>\n        <main className=\"App-main\">\n          <Switch>\n            <Route\n              path=\"/films/:id\"\n              component={FilmDetailed}\n            />\n            <Route path=\"/films\" exact render={() => <Films settingPagination={this.settingPagination} />} />\n            <Route\n              path=\"/actors/:id\"\n              component={ActorDetailed}\n            />\n            <Route path=\"/actors\" render={() => <Actors settingPagination={this.settingPagination} />} />\n\n          </Switch>\n          {(this.props.location.pathname === '/films' || this.props.location.pathname === '/actors') && this.state.setPagination &&(<>) <div className=\"d-flex justify-content-center\">\n        <PagePagination />\n          </div>\n          <div className=\"d-flex justify-content-center\" onClick={() => window.scrollTo(0, 0)}><span className=\"BackToTop\">Back to top</span></div></>)}\n\n        </main>\n        <footer >\n          <div className=\"App-footer\">\n            <div>\n              <span>OlegGre4ka&copy; 2019. ReactFilmsApp</span>\n            </div>\n            <div>\n              <a href=\"mailto:gre4kae@gmail.com\" title=\"Email\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaEnvelope style={{ fontSize: '24px' }} /><span style={{ color: 'white' }}>gre4kae@gmail.com</span></a>\n            </div>\n            <div><a href=\"https://github.com/OlegGre4ka/React-Films-App\" title=\"Github\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <FaGithub style={{ fontSize: '24px' }} /></a>\n              <a href=\"https://www.linkedin.com/in/oleg-grechka-b14488172/\" title=\"Linkedin\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaLinkedin style={{ fontSize: '24px' }} /></a>\n              <a href=\"skype:gre4kae?call\" title=\"Skype\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaSkype style={{ fontSize: '24px' }} /></a>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n   page:1\n  };\n  \n  export default function paginationReducer(state = initialState, action) {\n      // console.log(state,'confirmReducer')\n      switch (action.type) {\n        case \"UPDATE_PAGE\":\n          return { page: action.payload };\n    \n        default:\n          return state;\n    }\n  }","const initialState = {\n    film:[],\n    films:[]\n   };\n   \n   export default function filmDetailedReducer(state = initialState, action) {\n       // console.log(state,'confirmReducer')\n       switch (action.type) {\n         case \"UPDATE_FILM_DETAILED\":\n           return { film: action.payload, films:action.payloadFilms };\n     \n         default:\n           return state;\n     }\n   }","const initialState = {\n    actor:[]\n   };\n   \n   export default function actorDetailedReducer(state = initialState, action) {\n       // console.log(state,'confirmReducer')\n       switch (action.type) {\n         case \"UPDATE_ACTOR_DETAILED\":\n           return { actor: action.payload };\n     \n         default:\n           return state;\n     }\n   }","const initialState = {\n    searchWord:'',\n    searchedFilmData:[]\n   };\n   \n   export default function searchFilmReducer(state = initialState, action) {\n       switch (action.type) {\n        //  case \"UPDATE_SEARCHED_DATA\":\n        //    return { searchFilmWord: action.payload };\n           case \"UPDATE_SEARCHED_FILM_DATA\":\n           return { searchWord: action.payloadWord,searchedFilmData:action.payloadFilms };\n         default:\n           return state;\n     }\n   }","const initialState = {\n    searchActorWord:'',\n    searchedActors:[1]\n   };\n   \n   export default function searchActorReducer(state = initialState, action) {\n       switch (action.type) {\n    \n           case \"UPDATE_SEARCHED_ACTORS\":\n           return { searchActorWord: action.payloadWord,searchedActors:action.payloadActors };\n         default:\n           return state;\n     }\n   }","const initialState = {\n    genres:[]\n   };\n   \n   export default function genresReducer(state = initialState, action) {\n       // console.log(state,'confirmReducer')\n       switch (action.type) {\n         case \"GETTING_GENRES\":\n           return { genres: action.payload };\n     \n         default:\n           return state;\n     }\n   }","const initialState = {\n    genreID:null,\n    genreName:'Genres'\n   };\n   \n   export default function selectIDGenreReducer(state = initialState, action) {\n       switch (action.type) {\n         case \"UPDATE_ID_GENRE\":\n           return { genreID: action.payload,genreName:action.payloadName };\n     \n         default:\n           return state;\n     }\n   }","import {combineReducers} from 'redux';\nimport paginationReducer from './paginationReducer';\nimport filmDetailedReducer from './filmDetailedReducer';\nimport actorDetailedReducer from './actorDetailedReducer';\nimport searchFilmReducer from './searchFilmReducer';\nimport searchActorReducer from './searchActorReducer';\nimport genresReducer from './genresReducer';\nimport selectIDGenreReducer from './selectIDGenreReducer';\n\nexport default combineReducers({\n  paginationReducer, filmDetailedReducer, actorDetailedReducer,\n  searchFilmReducer, searchActorReducer, genresReducer, selectIDGenreReducer\n  })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport rootReducer from \"./Redux/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n        <App/>\n            {/* <App history={props}/> */}\n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}